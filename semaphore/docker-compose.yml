---
version: "3.9"
services:
  postgres:
    image: postgres:14
    container_name: semaphore-postgres
    restart: unless-stopped
    networks:
      - semaphore
    environment:
      POSTGRES_USER: semaphore
      POSTGRES_PASSWORD: semaphore
      POSTGRES_DB: semaphore
    volumes: 
      - ./data/postgres:/var/lib/postgresql/data
  semaphore:
    image: semaphoreui/semaphore:latest
    container_name: semaphore
    restart: unless-stopped
    networks:
      - proxy
      - semaphore
    environment:
      SEMAPHORE_DB_USER: semaphore
      SEMAPHORE_DB_PASS: semaphore
      SEMAPHORE_DB_HOST: postgres
      SEMAPHORE_DB_PORT: 5432
      SEMAPHORE_DB_DIALECT: postgres
      SEMAPHORE_DB: semaphore
      SEMAPHORE_PLAYBOOK_PATH: /tmp/semaphore/
      SEMAPHORE_ADMIN: ${SEMAPHORE_ADMIN}
      SEMAPHORE_ADMIN_NAME: ${SEMAPHORE_ADMIN_NAME}
      SEMAPHORE_ADMIN_PASSWORD: ${SEMAPHORE_ADMIN_PASSWORD}
      SEMAPHORE_ADMIN_EMAIL: ${SEMAPHORE_ADMIN_EMAIL}
      SEMAPHORE_ACCESS_KEY_ENCRYPTION: ${SEMAPHORE_ACCESS_KEY_ENCRYPTION}
      TZ: ${TZ}
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.semaphore.entrypoints=http"
      - "traefik.http.routers.semaphore.rule=Host(`semaphore.${LOCAL_DOMAIN_NAME}`)"
      - "traefik.http.middlewares.semaphore-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.semaphore.middlewares=dashy-https-redirect"
      - "traefik.http.routers.semaphore-secure.entrypoints=https"
      - "traefik.http.routers.semaphore-secure.rule=Host(`semaphore.${LOCAL_DOMAIN_NAME}`)"
      - "traefik.http.routers.semaphore-secure.tls=true"
      - "traefik.http.routers.semaphore-secure.service=semaphore"
      - "traefik.http.services.semaphore.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
    env_file: .env

networks:
  semaphore:
  proxy:
    external: true